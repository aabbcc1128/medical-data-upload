document.getElementById('uploadBtn').addEventListener('click', () => {
    const fileInput = document.getElementById('fileInput');
    const token = document.getElementById('githubToken').value;
    const file = fileInput.files[0];
    if (!file) {
        alert('يرجى اختيار ملف CSV');
        return;
    }
    if (!token) {
        alert('يرجى إدخال رمز GitHub');
        return;
    }

    Papa.parse(file, {
        header: true,
        complete: function(results) {
            const allData = results.data;
            const tbody = document.querySelector('tbody');
            tbody.innerHTML = '';
            allData.forEach(row => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${row['Region'] || ''}</td>
                    <td>${row['Hospital'] || ''}</td>
                    <td>${row['Level'] || ''}</td>
                    <td>${row['Submission By'] || ''}</td>
                    <td>${row['Submission Date'] || ''}</td>
                    <td>
                        <a href="#" class="action-btn">👁️</a>
                        <a href="#" class="action-btn">🗑️</a>
                    </td>
                `;
                tbody.appendChild(tr);
            });

            // GitHub upload logic remains the same as before
            const csv = Papa.unparse(allData);
            const blob = new Blob([csv], { type: 'text/csv' });
            const reader = new FileReader();
            reader.onload = function() {
                const content = reader.result.split(',')[1];
                const fileName = `Uploads/${Date.now()}.csv`;
                fetch('https://api.github.com/repos/aabbcc128/medical-data-upload/contents/' + fileName, {
                    method: 'PUT',
                    headers: { 'Authorization': `token ${token}`, 'Content-Type': 'application/json' },
                    body: JSON.stringify({ message: `Upload CSV ${fileName}`, content: content })
                })
                .then(response => response.json())
                .then(data => data.content ? alert('تم رفع الملف بنجاح!') : alert('فشل رفع الملف.'))
                .catch(error => alert('حدث خطأ: ' + error.message));
            };
            reader.readAsDataURL(blob);
        },
        error: function(error) {
            alert('خطأ في تحليل ملف CSV: ' + error.message);
        }
    });
});
